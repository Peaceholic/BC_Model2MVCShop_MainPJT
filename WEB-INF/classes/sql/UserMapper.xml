<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="UserMapper">

	<resultMap id="userSelectMap" type="user">
		<result property="id" 							column="user_id" 						jdbcType="VARCHAR"/>
		<result property="role"							column="role" 							jdbcType="VARCHAR" />
		<result property="nickName" 					column="nick_name" 						jdbcType="VARCHAR" />
		<result property="password" 					column="password" 						jdbcType="VARCHAR" />
		<result property="salt" 						column="salt" 							jdbcType="VARCHAR" />
		<result property="name" 						column="name" 							jdbcType="VARCHAR" />
		<result property="phone" 						column="phone" 							jdbcType="VARCHAR" />
		<result property="addr" 						column="addr" 							jdbcType="VARCHAR" />
		<result property="addUserRegDate" 				column="entry_reg_date" 				jdbcType="DATE"  />
		<result property="bank" 						column="bank" 							jdbcType="VARCHAR" />
		<result property="accountHolder" 				column="account_holder" 				jdbcType="VARCHAR" />
		<result property="accountNum" 					column="account_num" 					jdbcType="VARCHAR" />
		<result property="havingPoint" 					column="having_point" 					jdbcType="NUMERIC" />
		<result property="campName" 					column="camp_name" 						jdbcType="VARCHAR" />
		<result property="campCall" 					column="camp_call" 						jdbcType="VARCHAR" />
		<result property="businessUserApprovalFlag" 	column="entry_approval_flag" 			jdbcType="CHAR" />
		<result property="countCancelReceive" 			column="receive_cancel_total_count" 	jdbcType="NUMERIC" />
		<result property="receiveProhibitionEndDate" 	column="receive_ban_end_date" 			jdbcType="DATE" />
		<result property="dormantConversionDate" 		column="dormant_reg_date" 				jdbcType="DATE" />
		<result property="secessionRegDate" 			column="secession_reg_date" 			jdbcType="DATE" />
		<result property="suspensionDate" 				column="suspension_reg_date" 			jdbcType="DATE" />
		<result property="campBusinessNum" 				column="camp_business_num"			    jdbcType="VARCHAR" />
		<result property="campBusinessImg" 				column="camp_business_img"			    jdbcType="VARCHAR" />
		<result property="suspensionContent" 			column="suspension_content" 			jdbcType="VARCHAR" />
		<result property="auctionGrade" 				column="auction_grade" 					jdbcType="SMALLINT" />
		<result property="currentLoginRegDate" 			column="login_reg_date" 				jdbcType="DATE" />
		<result property="auctionSuspension"			column="auction_suspension_reg_date"	jdbcType="DATE" />
		<result property="snsId" 						column="sns_id" 						jdbcType="VARCHAR" />
		<result property="reportTotalCount" 			column="rc" 							jdbcType="NUMERIC" />
	</resultMap>
	
		<!-- SQL : INSERT -->
	<insert 	id="addUser"	parameterType="user" >
	 	INSERT
		INTO USERS( user_id , role , nick_name , password , salt, name, phone, addr, entry_reg_date , bank , account_holder,
		account_num, camp_name, camp_call, receive_ban_end_date, dormant_reg_date, secession_reg_date, suspension_reg_date, camp_business_num,camp_business_img ,suspension_content, sns_id) 
		VALUES	 (#{id} , #{role} , #{nickName:VARCHAR} , #{password} , #{salt:VARCHAR},  #{name} , #{phone} , #{addr:VARCHAR} , SYSDATE() , #{bank:VARCHAR}, #{accountHolder:VARCHAR},
		#{accountNum:VARCHAR}, #{campName:VARCHAR}, #{campCall:VARCHAR} , #{receiveProhibitionEndDate:DATE}, #{dormantConversionDate:DATE} , #{secessionRegDate:DATE} ,
		#{suspensionDate:DATE}, #{campBusinessNum:VARCHAR},#{campBusinessImg:VARCHAR} ,#{suspensionContent:VARCHAR}, #{snsId:VARCHAR})
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		u.user_id , u.role , u.nick_name , u.password ,u.salt, u.name, u.phone, u.addr, u.entry_reg_date , u.bank , u.account_holder, 
		u.account_num, u.having_point, u.camp_name, u.camp_call, u.entry_approval_flag, u.receive_cancel_total_count, 
		u.receive_ban_end_date, u.dormant_reg_date, u.secession_reg_date, u.suspension_reg_date, u.camp_business_num, u.camp_business_img, u.suspension_content,
		u.auction_grade, u.sns_id, h.login_reg_date, auction_suspension_reg_date
		FROM USERS u left outer join (SELECT * FROM LOGIN_HISTORY where (user_id, login_reg_date) in (select user_id, max(login_reg_date) as date FROM LOGIN_HISTORY group by user_id)) h
		on u.user_id = h.user_id where u.user_id = #{value} 
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE USERS
	   	<set>
	   		password = #{password:VARCHAR} ,
			nick_name = #{nickName:VARCHAR},
			phone = #{phone:VARCHAR} ,
			name =	#{name:VARCHAR},
			addr = #{addr:VARCHAR},
			camp_name = #{campName:VARCHAR},
			camp_call = #{campCall:VARCHAR},
			bank = #{bank:VARCHAR},
			account_holder = #{accountHolder:VARCHAR},
			account_num = #{accountNum:VARCHAR},
			salt=#{salt:VARCHAR},
			entry_approval_flag = #{businessUserApprovalFlag:VARCHAR}		
	   	</set>
	   	WHERE user_id = #{id}
	 </update>
	 
	  <!-- SQL : Update SuspensionUser -->
	 <update	id="addSuspensionUser"	parameterType="user" >
	   	UPDATE USERS
	   	<set>
	   		suspension_reg_date = SYSDATE() ,
			suspension_content = #{suspensionContent}
	   	</set>
	   	WHERE user_id = #{id}
	 </update>
	 
	  <!-- SQL : add SecessionUser -->
	 <update	id="addSecessionUser"	parameterType="user" >
	   	UPDATE USERS
	   	<set>
	   		secession_reg_date = SYSDATE()
	   	</set>
	   	WHERE user_id = #{id}
	 </update>
	 
	 <!-- SQL : add DormantUser -->
	 <update	id="addDormantUser"	parameterType="user" >
	   	UPDATE USERS
	   	<set>
	   		dormant_reg_date = SYSDATE()
	   	</set>
	   	WHERE user_id = #{id}
	 </update>	
	 
	  <!-- SQL : updateDormantGeneralUserConver -->
	 <update id="updateDormantGeneralUserConvert" parameterType="String" >
	   	UPDATE USERS
	   	<set>
	   		dormant_reg_date = null
	   	</set>
	   	WHERE user_id = #{value}
	 </update>	
	 
	 
	 <!-- SQL : ADD LOGIN DATE -->
	 <insert	id="addLoginDate"	parameterType="user" >
	   	INSERT INTO LOGIN_HISTORY(user_id, login_reg_date)
	   	VALUES (#{id}, SYSDATE())
	 </insert>
	 
	 
	 
	  <select  id="getSaltById"  parameterType="String"	resultMap="userSelectMap">
	  SELECT
	  user_id, salt
	  FROM USERS
	  where user_id = #{value}
	  </select>
	  
	  <select  id="findId"  parameterType="map"	resultType="String">
	  SELECT
	  user_id
	  FROM USERS
	  where phone = #{phone} AND name =#{name}
	  </select>
	 
	 
	 <!-- SQL : SELECT LIST -->
	 <select  id="listUser"  parameterType="search"	resultMap="userSelectMap">
		SELECT u.role, u.user_id, u.name, u.nick_name, u.camp_name, u.entry_reg_date, u.suspension_reg_date, 
		u.secession_reg_date, u.dormant_reg_date, u.entry_approval_flag, h.login_reg_date, rtc.rc
		FROM USERS u 
		left outer join (	SELECT * 
							FROM LOGIN_HISTORY 
							where (user_id, login_reg_date) in (select user_id, max(login_reg_date) as date FROM LOGIN_HISTORY  group by user_id)) h
		on u.user_id = h.user_id 
		left outer join (	SELECT count(receiver_id)rc, receiver_id 
							FROM REPORT 
							where report_status=1  
							group by receiver_id having count(receiver_id) =0)rtc
		on u.user_id = rtc.receiver_id
		WHERE u.role != "ADMIN" AND u.secession_reg_date is null AND u.suspension_reg_date is null AND u.dormant_reg_date is null
			<if test="searchCondition != null">
					
					<if test='searchCondition == "1"'>
						AND u.role = "GENERAL"
					</if>
					<if test='searchCondition == "2"'>
						AND u.role = "BUSINESS"
					</if>
					<if test='searchCondition == "3"'>
						AND u.role = 'BUSINESS' AND u.entry_approval_flag = 'N'
					</if>
					
					<if test="searchKeyword !='' and searchKeyword !=null">
						AND u.user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			</if>
			GROUP BY u.user_id
			ORDER BY u.entry_reg_date DESC
		<if test="pageSize != 0 ">
         LIMIT #{pageSize} OFFSET #{offset}
         </if>
	 </select>
	 
	  <!-- SQL : SELECT dormant LIST -->
	 <select  id="dormantListUser"  parameterType="search"	resultMap="userSelectMap">
		SELECT u.role, u.user_id, u.name, u.nick_name, u.camp_name, u.entry_reg_date, u.suspension_reg_date, 
		u.secession_reg_date, u.dormant_reg_date, u.entry_approval_flag, h.login_reg_date
		FROM USERS u 
		left outer join (	SELECT * 
							FROM LOGIN_HISTORY 
							where (user_id, login_reg_date) in (select user_id, max(login_reg_date) as date FROM LOGIN_HISTORY  group by user_id)) h
		on u.user_id = h.user_id 
			<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCondition != null">
			
					<if test='searchCondition == "1"'>
						AND role = "GENERAL"
					</if>
					<if test='searchCondition == "2"'>
						 AND role = "BUSINESS" AND entry_approval_flag = 'Y'
					</if>
					<if test="searchKeyword !='' and searchKeyword !=null">
						AND user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			
			</if>
			<if test="searchCondition == null or searchCondition == ''">
			dormant_reg_date is not null
			</if>
			<if test="searchKeyword !='' and searchKeyword !=null">
						AND user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			</trim>
			ORDER BY dormant_reg_date DESC
		<if test="pageSize != 0 ">
         LIMIT #{pageSize} OFFSET #{offset}
         </if>
	 </select>
	 
	 <select id="countDormantListUser" parameterType="search" resultType="int">
		SELECT COUNT(user_id)
		FROM USERS
		WHERE dormant_reg_date is not null
		<!-- <if test='_parameter != null'>
			AND registrant_id = #{value}
		</if> -->
	</select>
	
	<!-- SQL : SELECT secession LIST -->
	 <select  id="secessionListUser"  parameterType="search"	resultMap="userSelectMap">
		SELECT u.role, u.user_id, u.name, u.nick_name, u.camp_name, u.entry_reg_date, u.suspension_reg_date, 
		u.secession_reg_date, u.dormant_reg_date, u.entry_approval_flag, h.login_reg_date
		FROM USERS u 
		left outer join (	SELECT * 
							FROM LOGIN_HISTORY 
							where (user_id, login_reg_date) in (select user_id, max(login_reg_date) as date FROM LOGIN_HISTORY group by user_id)) h
		on u.user_id = h.user_id 
			<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCondition != null">
			
					<if test='searchCondition == "1"'>
						AND role = "GENERAL"
					</if>
					<if test='searchCondition == "2"'>
						 AND role = "BUSINESS" AND entry_approval_flag = 'Y'
					</if>
					<if test="searchKeyword !='' and searchKeyword !=null">
						AND user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			
			</if>
			<if test="searchCondition == null or searchCondition == ''">
			AND secession_reg_date is not null
			</if>
			<if test="searchKeyword !='' and searchKeyword !=null">
			AND user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			</trim>
			GROUP BY u.user_id
			ORDER BY secession_reg_date DESC
		<if test="pageSize != 0 ">
         LIMIT #{pageSize} OFFSET #{offset}
         </if>
	 </select>
	 
	 <select id="countSecessionListUser" parameterType="search" resultType="int">
		SELECT COUNT(user_id)
		FROM USERS
		WHERE secession_reg_date is not null
		<!-- <if test='_parameter != null'>
			AND registrant_id = #{value}
		</if> -->
	</select>
	 
	 <!-- SQL : SELECT reportSuspension LIST -->
	 <select  id="reportSuspensionListUser"  parameterType="search"	resultMap="userSelectMap">
		SELECT u.role, u.user_id, u.name, u.nick_name, u.camp_name, u.entry_reg_date, u.suspension_reg_date, 
		u.secession_reg_date, u.dormant_reg_date, u.entry_approval_flag, rtc.rc
		FROM USERS u left outer join (SELECT count(receiver_id)rc, receiver_id FROM REPORT where report_status=1 group by receiver_id having count(receiver_id) >0)rtc
		on u.user_id = rtc.receiver_id
			<trim prefix="WHERE" prefixOverrides="AND">
			<if test="searchCondition != null">
			
					<if test='searchCondition == "1"'>
						AND u.role = "GENERAL"
					</if>
					<if test='searchCondition == "2"'>
						 AND u.role = "BUSINESS" AND u.entry_approval_flag = 'Y'
					</if>
					<if test="searchKeyword !='' and searchKeyword !=null">
						AND u.user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			
			</if>
			<if test="searchCondition == null or searchCondition == ''">
			rtc.rc != 0 OR u.suspension_reg_date is not null
			</if>
			<if test="searchKeyword !='' and searchKeyword !=null">
						AND u.user_id LIKE CONCAT('%',#{searchKeyword},'%')
					</if>
			</trim>
			GROUP BY u.user_id
			ORDER BY u.suspension_reg_date DESC
		<if test="pageSize != 0 ">
         LIMIT #{pageSize} OFFSET #{offset}
         </if>
	 </select>
	 
	 <select id="countReportSuspensionListUser" parameterType="search" resultType="int">
		SELECT COUNT(rtc.rc)
		FROM USERS u left outer join (SELECT count(receiver_id)rc, receiver_id FROM REPORT where report_status=1 group by receiver_id having count(receiver_id) >0)rtc
		on u.user_id = rtc.receiver_id where rtc.rc >0
		<!-- <if test='_parameter != null'>
			AND registrant_id = #{value}
		</if> -->
	</select>
	 
	 <!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"  resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , name, role, secession_reg_date, suspension_reg_date, dormant_reg_date
						FROM USERS WHERE role != "ADMIN"
						<if test='searchCondition == "1"'>
						AND role = "GENERAL"
						</if>
						<if test='searchCondition == "2"'>
							AND role = "BUSINESS"
						</if>
						<if test='searchCondition == "3"'>
							AND role = 'BUSINESS' AND entry_approval_flag = 'N'
						</if>
						
						<if test="searchKeyword !='' and searchKeyword !=null">
							AND user_id LIKE CONCAT('%',#{searchKeyword},'%')
						</if>) countTable left outer join (SELECT count(receiver_id)rc, receiver_id FROM REPORT where report_status=1 group by receiver_id having count(receiver_id)=0)rtc
		on countTable.user_id = rtc.receiver_id where countTable.role != "ADMIN" AND countTable.secession_reg_date is null AND countTable.suspension_reg_date is null AND countTable.dormant_reg_date is null  					
	 </select>
	 
	 <!-- SQL : CHECK duplication -->
	 <select id="checkDuplication" parameterType="user" resultType="int">
		SELECT COUNT(*)
		FROM (SELECT user_id, nick_name, phone, camp_business_num
				 FROM USERS
				<trim prefix="WHERE" prefixOverrides="OR">
				 	<if test="id != null">
						OR user_id = #{id}
					</if>
					<if test="nickName != null">
						OR nick_name = #{nickName}
					</if>
					<if test="phone != null">
						OR phone = #{phone}
					</if>
					<if test="campBusinessNum != null">
						OR camp_business_num = #{campBusinessNum}
					</if>
				</trim>) c
	 </select>
	 
	  <!-- SQL : SELECT report Count -->
<!-- 	   <select id="countReport" parameterType="String" resultType="int">
		SELECT count(receiver_id)rc
		FROM users u left outer join (select receiver_id FROM report
				<where>
				 	report_status=1
				</where>) rttable
				ON u.user_id = rttable.receiver_id 
				<where>
				u.user_id = #{value}
				</where>
				GROUP BY u.user_id
				HAVING count(rttable.receiver_id)>0
		 </select> -->
		
		

</mapper>