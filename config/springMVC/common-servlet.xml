<?xml version="1.0" encoding="UTF-8"?>

<beans 	xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:task="http://www.springframework.org/schema/task"
		xmlns:websocket="http://www.springframework.org/schema/websocket"
		xmlns:int="http://www.springframework.org/schema/integration"
 		xmlns:int-websocket="http://www.springframework.org/schema/integration/websocket"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd
				
				http://www.springframework.org/schema/mvc
				http://www.springframework.org/schema/mvc/spring-mvc.xsd
				
				http://www.springframework.org/schema/websocket
       			http://www.springframework.org/schema/websocket/spring-websocket.xsd
       			
       			http://www.springframework.org/schema/integration
			    http://www.springframework.org/schema/integration/spring-integration.xsd
			    
			    http://www.springframework.org/schema/integration/websocket
			    http://www.springframework.org/schema/integration/websocket/spring-integration-websocket.xsd			    
			    
			    http://www.springframework.org/schema/task
			    http://www.springframework.org/schema/task/spring-task.xsd">
    
   <!-- :: 공통적인 사항을 설정한 common-servlet.xml 사용. -->
       
    <!--  ㅇ 어노테이션 기반 :: Spring Framework 사용.
    		ㅇ @Controller annotation 선언된 Bean 만 Wiring
		   ㅇ @Service / @Repository  annotation 선언된 Bean 은 Scan 제외 -->
	<context:component-scan base-package="site.gamsung.controller">
		<context:include-filter 	type="annotation"	expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Repository"/>
	</context:component-scan> 
	
   	
   	<!-- ////////////////////////////////////////// 추가 ,  변경된 부분 ////////////////////////////////////////////////// -->
   	<!-- ■ RequestMappingHandlerMapping 설정 등 기타 Annotation 기반
   	        모든 기능을 사용 할 수 있는 아래의 설정으로 변경 -->
	<mvc:annotation-driven> 
		<mvc:message-converters> 
			<!-- @ResponseBody로 String 처리할때 한글처리 --> 
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
				<property name="supportedMediaTypes"> 
					<list> 
						<value>text/html;charset=UTF-8</value> 
					</list> 
				</property> 
			</bean>
		 </mvc:message-converters> 
	 </mvc:annotation-driven>

	<!-- ■ Annotation 기반의 모든 기능을 사용 할 수 있는 설정
	          <mvc:annotation-driven /> 사용으로 interceptor 를 직접
	          RequestMappingHandlerMapping 에 주입 할 수 없으니 
	       	  아래의 설정방법으로 interceptor 주입-->
	       	  
    <mvc:interceptors>
		
   		<mvc:interceptor>
			<mvc:mapping path="/**/*"/>
			<mvc:exclude-mapping path="/resources/**"/>
			<mvc:exclude-mapping path="/uploadfiles/**"/>
			<mvc:exclude-mapping path="/lib/**"/>
			<mvc:exclude-mapping path="/bootstrap/**"/>
			<bean class="site.gamsung.common.interceptor.LogonCheckInterceptor" />
   		</mvc:interceptor>

   	</mvc:interceptors> 
	<!-- //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
	
	 
	 <!-- ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	 		::  Annotation 지원 HandlerMapping 선언 
	        :: Interceptor 선언 : 로그인 유무확인.  추가 부분
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
	 	 <property name="order" value="0"/>
		<property name="interceptors" ref="logonCheckInterceptor"/>
	 </bean>
	 
	 		:: Interceptor 선언 : 로그인 유무확인.
	<bean id="logonCheckInterceptor"	class="com.model2.mvc.common.web.LogonCheckInterceptor" />
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->		           


	<!--  :: ViewResolver 선언 -->	
    <bean id="viewResolver"
				class="org.springframework.web.servlet.view.InternalResourceViewResolver" />
	
	
	<!-- ////////////////////////////////////////// 추가 ,  변경된 부분 ////////////////////////////////////////////////// -->
	<!--	
		■ / 형식의 Mapping 은 모든(정적,동적 자원) 요청시 처리책임
		■ 정적자원 요청시 DispatcherServlet 에게 처리방법지정
	    ■ 정적자원요청 (아래의 URI 포함 요청)시  처리 경로 location 지정
	     	
	    실제 PJT 진행시 일반적으로 resources 폴더를 만들고 폴더내부에
	     css , image, js 등 넣어 관리하며 아래와 같이 1번의 설정으로 관리
		<mvc:resources mapping="/css/**" location="/css/" />
	   	<mvc:resources mapping="/images/**" location="/images/" />
	   	<mvc:resources mapping="/javascript/**" location="/javascript/" />
	--> 
    <mvc:resources mapping="/resources/**" location="/resources/" />
    <mvc:resources mapping="/uploadfiles/**" location="/uploadfiles/" />
    <mvc:resources mapping="/lib/**" location="/lib/" />
    <mvc:resources mapping="/bootstrap/**" location="/bootstrap/" />
    
    
	<!-- //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// -->
   	

	<!-- 	:: exception resolver  선언 :: 서술적 / 선언적 예외처리 
			:: Servlet 에서의 선언적 예외처리를 다시 생각하며....  -->
	
	
	<!-- exception처리 -->
	<!-- 
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.NullPointerException">/common/nullError.jsp</prop>
				<prop key="java.lang.NumberFormatException">/common/numberFormatError.jsp</prop>
			</props>
		</property>
		<property name="defaultErrorView"	value="/common/error.jsp" />
	</bean>
	 -->
	 
	<!-- 파일 업로드 CommonsMultipartResolver는 스프링 프레임워크에 내장되어있다.-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="52428800" />
    	<property name="maxInMemorySize" value="1000000" />
    	<property name="defaultEncoding" value="utf-8" />
	</bean>
	
	
	<!-- spring scheduler -->
	<context:component-scan base-package="site.gamsung.service.*.impl"/>
	<task:annotation-driven executor="executor" scheduler="scheduler"/>
	<task:scheduler id="scheduler" pool-size="10"/>
	<task:executor id="executor" pool-size="10"/>
	
	<!-- STOMP Message Broker -->
	<websocket:message-broker application-destination-prefix="/app">
       <websocket:stomp-endpoint path="/realtime">
            <websocket:handshake-interceptors>
            	<bean class="site.gamsung.util.auction.HttpHandshakeInterceptor"></bean>
            </websocket:handshake-interceptors>
            <websocket:sockjs/>
       </websocket:stomp-endpoint>
       <websocket:simple-broker prefix="/queue, /topic"/>
     	<websocket:client-inbound-channel>
        	<websocket:interceptors>
           		<bean id="webSocketInterceptor" class="site.gamsung.util.auction.WebSocketInterceptor"/>
        	</websocket:interceptors>
    	</websocket:client-inbound-channel>
	</websocket:message-broker>
	
	
	
 
	
</beans>
